"""
Django settings for myFirstProject project.

Generated by 'django-admin startproject' using Django 5.2.6.
"""

from pathlib import Path
import os

BASE_DIR = Path(__file__).resolve().parent.parent

# Configuration de base
SECRET_KEY = 'django-insecure-fe3b@%sj7(npf#rw1md12#!unv(1)r=^^wgs==zljzz4c%=va6'
DEBUG = True
ALLOWED_HOSTS = ['*']

# Applications installées
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myFirstApp',
]

# Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # pour servir les fichiers statiques en production
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myFirstProject.urls'

# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # répertoire global de templates
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myFirstProject.wsgi.application'

# Base de données
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Validation de mots de passe
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalisation
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'Europe/Paris'
USE_I18N = True
USE_TZ = True

# Fichiers statiques
STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'productionfiles'

#fichier media pour l'upload des photos
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Configuration email (en développement, affichage dans la console)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Redirections après authentification
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# En production, exemple de configuration email :
"""
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'tonemail@gmail.com'
EMAIL_HOST_PASSWORD = 'ton_mot_de_passe_ou_cle_app'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
"""

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Pour tests, affichage des emails dans la console
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#EMAIL_HOST = 'smtp.gmail.com'
#EMAIL_USE_TLS = True
#EMAIL_PORT = 587
#EMAIL_HOST_USER = 'tonemail@gmail.com'        
#EMAIL_HOST_PASSWORD = 'ton_mot_de_passe_app'  
#DEFAULT_FROM_EMAIL = 'tonemail@gmail.com'
#decorators / a tout inscrit on lui cree un profil vide et il doit etre mis dans un groupe soit admin soit etudiant qu'il peut renseigner plus tard on lui donnera un avatar par defaut il doit y avoir une difference entre administrateur et etudiant l'admin doit pouvoir faire des taches avancees l'admin doit pouvoir mettre des bulletins sur les dossiers pour chaque etudiants 